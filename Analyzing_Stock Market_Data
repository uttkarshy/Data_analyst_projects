import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt

# Define the ticker symbol and download the data
ticker = "AAPL"
data = yf.download(ticker, start="2015-01-01", end="2021-12-31")

# Plot the closing price of the stock over time
plt.plot(data['Close'])
plt.title(f"{ticker} Stock Price (2015-2021)")
plt.xlabel('Year')
plt.ylabel('Price')
plt.show()

# Calculate the rolling mean and rolling standard deviation of the stock's closing price
data['Rolling Mean'] = data['Close'].rolling(window=30).mean()
data['Rolling Std'] = data['Close'].rolling(window=30).std()

# Plot the rolling mean and standard deviation over time
plt.plot(data['Close'], label='Closing Price')
plt.plot(data['Rolling Mean'], label='Rolling Mean')
plt.plot(data['Rolling Std'], label='Rolling Std')
plt.title(f"{ticker} Stock Price (2015-2021)")
plt.xlabel('Year')
plt.ylabel('Price')
plt.legend()
plt.show()

# Calculate daily percentage change of the closing price
data['Daily Returns'] = data['Close'].pct_change()

# Plot the daily percentage change of the stock's closing price over time
plt.plot(data['Daily Returns'])
plt.title(f"{ticker} Daily Returns (2015-2021)")
plt.xlabel('Year')
plt.ylabel('Percentage Change')
plt.show()

# Plot a histogram of the daily percentage change of the stock's closing price
data['Daily Returns'].hist(bins=50)
plt.title(f"{ticker} Daily Returns Distribution (2015-2021)")
plt.xlabel('Daily Returns')
plt.ylabel('Frequency')
plt.show()

# Calculate the cumulative daily returns of the stock
data['Cumulative Returns'] = (1 + data['Daily Returns']).cumprod()

# Plot the cumulative daily returns of the stock over time
plt.plot(data['Cumulative Returns'])
plt.title(f"{ticker} Cumulative Returns (2015-2021)")
plt.xlabel('Year')
plt.ylabel('Cumulative Returns')
plt.show()
